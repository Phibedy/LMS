package lms;

message Request {
	message Info {}
	message Shutdown {}
	message ListClients {}
	message Run {
		optional string config_file = 1;
        repeated string include_paths = 2;
        repeated string flags = 3;
        optional bool debug = 4;
        optional bool detached = 5 [default = false];
        optional bool shutdown_runtime_on_detach = 6 [default = false];
        optional Response.LogEvent.Level log_level = 7 [default = ALL];
	}
	message ListProcesses {}
	message Attach {
	    optional string id = 1;
	    optional Response.LogEvent.Level log_level = 2 [default = ALL];
	}
	message Stop {
	    optional string id = 1;
	    optional bool kill = 2;
	}
	message ModuleList {}
    message Profiling {
        optional string id = 1;
    }
    message ListenBroadcastEvents {
        optional bool enable = 1;
    }

	oneof content {
		Info info = 1;
		Shutdown shutdown = 2;
		ListClients list_clients = 3;
		Run run = 4;
		ListProcesses list_processes = 5;
		Attach attach = 6;
		Stop stop = 7;
		ModuleList module_list = 8;
		Profiling profiling = 9;
		ListenBroadcastEvents listen_broadcasts = 10;
	}
}

message Response {
    message Info {
        optional int32 version = 1;
        optional int32 pid = 2;
    }

    message ClientList {
        message Client {
            optional int32 fd = 1;
            optional string peer = 2;
        }

        repeated Client clients = 1;
    }
    
    message ProcessList {
        message Process {
            optional int32 pid = 1;
            optional string config_file = 2;
        }
        
        repeated Process processes = 1;
    }
    
    message ModuleListResponse {
	    enum Permission {
		    READ = 1;
		    WRITE = 2;
	    }

	    message Access {
		    optional string module = 1;
		    optional Permission permission = 2;
		    optional int32 priority = 3;
	    }

	    message Channel {
	        optional string name = 1;
		    repeated Access access_list = 2;
	    }

	    repeated Channel channels = 1;
    }
    
    message LogEvent {
        optional Level level = 1;
        optional string tag = 2;
        optional string text = 3;
        optional bool close_after = 4 [default = false];
        optional int64 timestamp = 5;
        
        enum Level {
            // must be compatible to lms::logging:Level
            ALL = 0;
            PROFILE = 10;
            DEBUG = 20;
            INFO = 30;
            WARN = 40;
            ERROR = 50;
            OFF = 255;
        }
    }
    
    message ProfilingSummary {
        message Trace {
            optional string name = 1;
            optional int32 avg = 2;
            optional int32 std = 3;
            optional int32 max = 4;
            optional int32 count = 5;
            optional int32 min = 6;
        }
        
        repeated Trace traces = 1;
    }
    
    oneof content {
        Info info = 1;
        ClientList client_list = 2;
        ProcessList process_list = 3;
        ModuleListResponse module_list = 4;
        LogEvent log_event = 5;
        ProfilingSummary profiling_summary = 6;
    }
}
