// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recording_meta.proto

#ifndef PROTOBUF_recording_5fmeta_2eproto__INCLUDED
#define PROTOBUF_recording_5fmeta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace lms {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_recording_5fmeta_2eproto();
void protobuf_AssignDesc_recording_5fmeta_2eproto();
void protobuf_ShutdownFile_recording_5fmeta_2eproto();

class MetaFile;
class MetaFile_Channel;

// ===================================================================

class MetaFile_Channel : public ::google::protobuf::Message {
 public:
  MetaFile_Channel();
  virtual ~MetaFile_Channel();

  MetaFile_Channel(const MetaFile_Channel& from);

  inline MetaFile_Channel& operator=(const MetaFile_Channel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetaFile_Channel& default_instance();

  void Swap(MetaFile_Channel* other);

  // implements Message ----------------------------------------------

  MetaFile_Channel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetaFile_Channel& from);
  void MergeFrom(const MetaFile_Channel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // repeated string writing_modules = 3;
  inline int writing_modules_size() const;
  inline void clear_writing_modules();
  static const int kWritingModulesFieldNumber = 3;
  inline const ::std::string& writing_modules(int index) const;
  inline ::std::string* mutable_writing_modules(int index);
  inline void set_writing_modules(int index, const ::std::string& value);
  inline void set_writing_modules(int index, const char* value);
  inline void set_writing_modules(int index, const char* value, size_t size);
  inline ::std::string* add_writing_modules();
  inline void add_writing_modules(const ::std::string& value);
  inline void add_writing_modules(const char* value);
  inline void add_writing_modules(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& writing_modules() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_writing_modules();

  // @@protoc_insertion_point(class_scope:lms.MetaFile.Channel)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> writing_modules_;
  friend void  protobuf_AddDesc_recording_5fmeta_2eproto();
  friend void protobuf_AssignDesc_recording_5fmeta_2eproto();
  friend void protobuf_ShutdownFile_recording_5fmeta_2eproto();

  void InitAsDefaultInstance();
  static MetaFile_Channel* default_instance_;
};
// -------------------------------------------------------------------

class MetaFile : public ::google::protobuf::Message {
 public:
  MetaFile();
  virtual ~MetaFile();

  MetaFile(const MetaFile& from);

  inline MetaFile& operator=(const MetaFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetaFile& default_instance();

  void Swap(MetaFile* other);

  // implements Message ----------------------------------------------

  MetaFile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetaFile& from);
  void MergeFrom(const MetaFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MetaFile_Channel Channel;

  // accessors -------------------------------------------------------

  // repeated .lms.MetaFile.Channel channels = 1;
  inline int channels_size() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 1;
  inline const ::lms::MetaFile_Channel& channels(int index) const;
  inline ::lms::MetaFile_Channel* mutable_channels(int index);
  inline ::lms::MetaFile_Channel* add_channels();
  inline const ::google::protobuf::RepeatedPtrField< ::lms::MetaFile_Channel >&
      channels() const;
  inline ::google::protobuf::RepeatedPtrField< ::lms::MetaFile_Channel >*
      mutable_channels();

  // @@protoc_insertion_point(class_scope:lms.MetaFile)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::lms::MetaFile_Channel > channels_;
  friend void  protobuf_AddDesc_recording_5fmeta_2eproto();
  friend void protobuf_AssignDesc_recording_5fmeta_2eproto();
  friend void protobuf_ShutdownFile_recording_5fmeta_2eproto();

  void InitAsDefaultInstance();
  static MetaFile* default_instance_;
};
// ===================================================================


// ===================================================================

// MetaFile_Channel

// optional string name = 1;
inline bool MetaFile_Channel::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetaFile_Channel::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetaFile_Channel::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetaFile_Channel::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MetaFile_Channel::name() const {
  // @@protoc_insertion_point(field_get:lms.MetaFile.Channel.name)
  return *name_;
}
inline void MetaFile_Channel::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:lms.MetaFile.Channel.name)
}
inline void MetaFile_Channel::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:lms.MetaFile.Channel.name)
}
inline void MetaFile_Channel::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:lms.MetaFile.Channel.name)
}
inline ::std::string* MetaFile_Channel::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:lms.MetaFile.Channel.name)
  return name_;
}
inline ::std::string* MetaFile_Channel::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MetaFile_Channel::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:lms.MetaFile.Channel.name)
}

// optional string type = 2;
inline bool MetaFile_Channel::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetaFile_Channel::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetaFile_Channel::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetaFile_Channel::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& MetaFile_Channel::type() const {
  // @@protoc_insertion_point(field_get:lms.MetaFile.Channel.type)
  return *type_;
}
inline void MetaFile_Channel::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:lms.MetaFile.Channel.type)
}
inline void MetaFile_Channel::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:lms.MetaFile.Channel.type)
}
inline void MetaFile_Channel::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:lms.MetaFile.Channel.type)
}
inline ::std::string* MetaFile_Channel::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:lms.MetaFile.Channel.type)
  return type_;
}
inline ::std::string* MetaFile_Channel::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MetaFile_Channel::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:lms.MetaFile.Channel.type)
}

// repeated string writing_modules = 3;
inline int MetaFile_Channel::writing_modules_size() const {
  return writing_modules_.size();
}
inline void MetaFile_Channel::clear_writing_modules() {
  writing_modules_.Clear();
}
inline const ::std::string& MetaFile_Channel::writing_modules(int index) const {
  // @@protoc_insertion_point(field_get:lms.MetaFile.Channel.writing_modules)
  return writing_modules_.Get(index);
}
inline ::std::string* MetaFile_Channel::mutable_writing_modules(int index) {
  // @@protoc_insertion_point(field_mutable:lms.MetaFile.Channel.writing_modules)
  return writing_modules_.Mutable(index);
}
inline void MetaFile_Channel::set_writing_modules(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:lms.MetaFile.Channel.writing_modules)
  writing_modules_.Mutable(index)->assign(value);
}
inline void MetaFile_Channel::set_writing_modules(int index, const char* value) {
  writing_modules_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:lms.MetaFile.Channel.writing_modules)
}
inline void MetaFile_Channel::set_writing_modules(int index, const char* value, size_t size) {
  writing_modules_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:lms.MetaFile.Channel.writing_modules)
}
inline ::std::string* MetaFile_Channel::add_writing_modules() {
  return writing_modules_.Add();
}
inline void MetaFile_Channel::add_writing_modules(const ::std::string& value) {
  writing_modules_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:lms.MetaFile.Channel.writing_modules)
}
inline void MetaFile_Channel::add_writing_modules(const char* value) {
  writing_modules_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:lms.MetaFile.Channel.writing_modules)
}
inline void MetaFile_Channel::add_writing_modules(const char* value, size_t size) {
  writing_modules_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:lms.MetaFile.Channel.writing_modules)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MetaFile_Channel::writing_modules() const {
  // @@protoc_insertion_point(field_list:lms.MetaFile.Channel.writing_modules)
  return writing_modules_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MetaFile_Channel::mutable_writing_modules() {
  // @@protoc_insertion_point(field_mutable_list:lms.MetaFile.Channel.writing_modules)
  return &writing_modules_;
}

// -------------------------------------------------------------------

// MetaFile

// repeated .lms.MetaFile.Channel channels = 1;
inline int MetaFile::channels_size() const {
  return channels_.size();
}
inline void MetaFile::clear_channels() {
  channels_.Clear();
}
inline const ::lms::MetaFile_Channel& MetaFile::channels(int index) const {
  // @@protoc_insertion_point(field_get:lms.MetaFile.channels)
  return channels_.Get(index);
}
inline ::lms::MetaFile_Channel* MetaFile::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:lms.MetaFile.channels)
  return channels_.Mutable(index);
}
inline ::lms::MetaFile_Channel* MetaFile::add_channels() {
  // @@protoc_insertion_point(field_add:lms.MetaFile.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lms::MetaFile_Channel >&
MetaFile::channels() const {
  // @@protoc_insertion_point(field_list:lms.MetaFile.channels)
  return channels_;
}
inline ::google::protobuf::RepeatedPtrField< ::lms::MetaFile_Channel >*
MetaFile::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:lms.MetaFile.channels)
  return &channels_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lms

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_recording_5fmeta_2eproto__INCLUDED
